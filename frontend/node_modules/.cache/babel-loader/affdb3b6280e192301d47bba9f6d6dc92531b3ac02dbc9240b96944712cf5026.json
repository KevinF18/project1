{"ast":null,"code":"var _jsxFileName = \"/Users/kevinflores/Documents/comp 584/proj1/frontend/src/components/SortableTask.js\",\n  _s = $RefreshSig$();\nimport { useSortable } from \"@dnd-kit/sortable\";\nimport { CSS } from \"@dnd-kit/utilities\";\nimport { Button } from \"react-bootstrap\";\nimport Card from \"react-bootstrap/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function SortableTask(props) {\n  _s();\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition\n  } = useSortable({\n    sort_field: props.sort_field,\n    onDragEnd: event => {\n      // Emit the updated tasks to the server when the sort order changes\n      socket.emit(\"tasks\", event.sortedItems);\n    }\n  });\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: setNodeRef,\n    style: style,\n    ...attributes,\n    ...listeners,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"m-3\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: [props.task.name, \" - Display Order: \", props.task.sort_field]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => {\n            props.handleViewDetails(props.task);\n          },\n          children: \"View Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(SortableTask, \"FTUh0JV0KNM2MI3tYtLrQh0rr1U=\", false, function () {\n  return [useSortable];\n});\n_c = SortableTask;\nvar _c;\n$RefreshReg$(_c, \"SortableTask\");","map":{"version":3,"names":["useSortable","CSS","Button","Card","jsxDEV","_jsxDEV","SortableTask","props","_s","attributes","listeners","setNodeRef","transform","transition","sort_field","onDragEnd","event","socket","emit","sortedItems","style","Transform","toString","ref","children","className","Header","task","name","fileName","_jsxFileName","lineNumber","columnNumber","Body","variant","onClick","handleViewDetails","_c","$RefreshReg$"],"sources":["/Users/kevinflores/Documents/comp 584/proj1/frontend/src/components/SortableTask.js"],"sourcesContent":["import { useSortable } from \"@dnd-kit/sortable\";\nimport { CSS } from \"@dnd-kit/utilities\";\nimport { Button } from \"react-bootstrap\";\nimport Card from \"react-bootstrap/Card\";\nexport function SortableTask(props) {\n  const { attributes, listeners, setNodeRef, transform, transition } =\n    useSortable({\n      sort_field: props.sort_field,\n      onDragEnd: (event) => {\n        // Emit the updated tasks to the server when the sort order changes\n        socket.emit(\"tasks\", event.sortedItems);\n      },\n    });\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n  };\n\n  return (\n    <div ref={setNodeRef} style={style} {...attributes} {...listeners}>\n      <Card className=\"m-3\">\n        <Card.Header>\n          {props.task.name} - Display Order: {props.task.sort_field}\n        </Card.Header>\n        <Card.Body>\n          {\" \"}\n          <Button\n            variant=\"secondary\"\n            onClick={() => {\n              props.handleViewDetails(props.task);\n            }}\n          >\n            View Details\n          </Button>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,mBAAmB;AAC/C,SAASC,GAAG,QAAQ,oBAAoB;AACxC,SAASC,MAAM,QAAQ,iBAAiB;AACxC,OAAOC,IAAI,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACxC,OAAO,SAASC,YAAYA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAClC,MAAM;IAAEC,UAAU;IAAEC,SAAS;IAAEC,UAAU;IAAEC,SAAS;IAAEC;EAAW,CAAC,GAChEb,WAAW,CAAC;IACVc,UAAU,EAAEP,KAAK,CAACO,UAAU;IAC5BC,SAAS,EAAGC,KAAK,IAAK;MACpB;MACAC,MAAM,CAACC,IAAI,CAAC,OAAO,EAAEF,KAAK,CAACG,WAAW,CAAC;IACzC;EACF,CAAC,CAAC;EAEJ,MAAMC,KAAK,GAAG;IACZR,SAAS,EAAEX,GAAG,CAACoB,SAAS,CAACC,QAAQ,CAACV,SAAS,CAAC;IAC5CC;EACF,CAAC;EAED,oBACER,OAAA;IAAKkB,GAAG,EAAEZ,UAAW;IAACS,KAAK,EAAEA,KAAM;IAAA,GAAKX,UAAU;IAAA,GAAMC,SAAS;IAAAc,QAAA,eAC/DnB,OAAA,CAACF,IAAI;MAACsB,SAAS,EAAC,KAAK;MAAAD,QAAA,gBACnBnB,OAAA,CAACF,IAAI,CAACuB,MAAM;QAAAF,QAAA,GACTjB,KAAK,CAACoB,IAAI,CAACC,IAAI,EAAC,oBAAkB,EAACrB,KAAK,CAACoB,IAAI,CAACb,UAAU;MAAA;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACd3B,OAAA,CAACF,IAAI,CAAC8B,IAAI;QAAAT,QAAA,GACP,GAAG,eACJnB,OAAA,CAACH,MAAM;UACLgC,OAAO,EAAC,WAAW;UACnBC,OAAO,EAAEA,CAAA,KAAM;YACb5B,KAAK,CAAC6B,iBAAiB,CAAC7B,KAAK,CAACoB,IAAI,CAAC;UACrC,CAAE;UAAAH,QAAA,EACH;QAED;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACxB,EAAA,CAnCeF,YAAY;EAAA,QAExBN,WAAW;AAAA;AAAAqC,EAAA,GAFC/B,YAAY;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}